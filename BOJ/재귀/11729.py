// 하노이 탑 이동 순서

// 세 개의 장대가 있고 첫 번째 장대에는 반경이 서로 다른 n개의 원판이 쌓여 있다
// 각 원판은 반경이 큰 순서대로 쌓여있고, 수도승들이 다음 규칙에 따라 첫 번째 장대에서 세 번째 장대로 옮기려 한다
// 한 번에 한 개의 원판만을 다른 탑으로 옮길 수 있다
// 쌓아 놓은 원판은 항상 위의 것이 아래의 것보다 작아야 한다
// 이 작업을 수행하는데 필요한 이동 순서를 출력하는 프로그램을 작성하라
// 단, 이동 횟수는 최소가 되어야 한다
// 첫째 줄에 첫 번째 장대에 쌓인 원판의 개수 N (1 ≤ N ≤ 20)이 주어진다

// 재귀를 이용해야 한다
// 순서는 n이 짝수인 경우 1번 원판을 2번 장대로 먼저 이동
// n이 홀수인 경우 1번 원판을 3번 장대로 먼저 이동

n = int(input())

def hanoi(n, a, b, c):
  if n == 1:
    move.append([a, c])
  else:
    hanoi(n-1, a, c, b)
    move.append([a, c])
    hanoi(n-1, b, a, c)

move = [] // 이동 경로를 담을 리스트
hanoi(int(input()), 1, 2, 3) 
print(len(move)) // 이동 횟수
print("\n".join([''.join(str(i) for i in row) for row in move])) // 이동 경로 출력
