// 개미 전사

// 메뚜기 마을에는 여러 개의 식량창고가 일직선으로 이어져 있으며 각 식량창고에는 정해진 수의 식량을 저장하고 있다
// 메뚜기 정찰병들은 일직선상에 존재하는 식량창고 중에서 서로 인접한 식량창고가 공격받으면 바로 알아챌 수 있다
// 따라서 개미 전사가 정찰병에게 들키지 않고 식량창고를 약탈하기 위해서는 최소한 한 칸 이상 떨어진 식량창고를 약탈해야 한다
// 개미 전사를 위해 식량창고 N개에 대한 정보가 주어졌을 때 얻을 수 있는 식량의 최댓값을 구하는 프로그램을 작성하시오(3 <= N <= 100)
// 첫째 줄에 식량창고의 개수 N, 둘째 줄에 공백으로 구분되어 각 식량창고에 저장된 식량의 개수 K가 주어진다(0 <= K <= 1,000)

// (i - 1)번째 식량창고를 털기로 결정한 경우 현재의 식량창고(i)를 털 수 없다
// (i - 2)번째 식량창고를 털기로 결정한 경우 현재의 식량창고(i)를 털 수 있다
// 그리고 더 많은 식량을 털 수 있는 경우를 선택하면 된다
// i번째 식량창고에 대한 최적의 해를 구할 때 왼쪽부터 (i - 3)번째 이하의 식량창고에 대한 최적의 해에 대해서는 고려할 필요가 없다

n = int(input())
array = list(map(int, input().split())) // 모든 식량 정보 입력받기

d = [0] * 100 // 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화

// 다이나믹 프로그래밍 진행(보텀업)
d[0] = array[0]
d[1] = max(array[0], array[1])
for i in range(2, n):
  d[i] = max(d[i - 1], d[i - 2] + array[i])
  
print(d[n - 1])
