// 1로 만들기

// 정수 X가 주어질 때 정수 X에 사용할 수 있는 연산은 다음과 같이 4가지이다
// 1. X가 5로 나누어 떨어지면, 5로 나눈다
// 2. X가 3으로 나누어 떨어지면, 3으로 나눈다
// 3. X가 2로 나누어 떨어지면, 2로 나눈다
// 4. X에서 1을 뺀다
// 정수 X가 주어졌을 때, 연산 4개를 적절히 사용하여 1을 만들려고 한다(1 <= X <= 30,000)
// 연산을 사용하는 횟수의 최솟값을 출력하시오

x = int(input())
d = [0] * 30001 // 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화

// 다이나믹 프로그래밍 진행(보텀업)
for i in range(2, x + 1):
  d[i] = d[i - 1] + 1 // 현재의 수에서 1을 빼는 경우
  if i % 2 == 0: // 현재의 수가 2로 나누어 떨어지는 경우
    d[i] = min(d[i], d[i // 2] + 1) // 1을 더해주는 이유는 함수의 호출 횟수를 구해야 하기 때문이다
  if i % 3 == 0: // 현재의 수가 3로 나누어 떨어지는 경우
    d[i] = min(d[i], d[i // 3] + 1)
  if i % 5 == 0: // 현재의 수가 5로 나누어 떨어지는 경우
    d[i] = min(d[i], d[i // 5] + 1)
    
print(d[x])
